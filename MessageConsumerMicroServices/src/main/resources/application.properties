spring.application.name=consumer
server.port=8002
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.cloud.stream.bindings.input.destination=mydestination
#for a same group,amoung multiple instance only one will receive the message by
#competing; this helps in stopping duplication; work-stealing /aggresive consumer ; kind of load balance
spring.cloud.stream.bindings.input.group=mydestination-group
#if we stop the consumer; durable means when the consumer is up it will consume the message
#from the broker;consumer groups are durable in nature

logging.level.org.org.springframework.cloud.stream=DEBUG
management.endpoints.web.exposure.include=*
